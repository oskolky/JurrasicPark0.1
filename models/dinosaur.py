class Dinosaur:
    def __init__(self, name, scientific_name, period):
        self.name = name
        self.scientific_name = scientific_name
        self.period = period

    def __str__(self):
        return f"ü¶ñ {self.name} ({self.scientific_name}), –ø–µ—Ä–∏–æ–¥: {self.period}"

    @classmethod
    def add_dinosaur(cls, dinosaurs):
        """Method to add a new dinosaur to the dinosaurs collection."""
        print("\n=== ü¶ï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞ ===")

        # Collect user inputs for the new dinosaur
        name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞: ").strip()
        latin_name = input("–í–≤–µ–¥–∏—Ç–µ –ª–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ").strip()
        period = input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–Æ—Ä—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥'): ").strip()

        # Validate inputs
        if not name or not latin_name or not period:
            print("‚ùå –û—à–∏–±–∫–∞: –≤—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!")
            return None

        # Check if the dinosaur is already in the collection
        if name in dinosaurs:
            print("‚ö†Ô∏è –≠—Ç–æ—Ç –¥–∏–Ω–æ–∑–∞–≤—Ä —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ!")
            return None

        # Create the new dinosaur and add it to the dictionary
        dinosaur = cls(name, latin_name, period)
        dinosaurs[name] = dinosaur
        print(f"‚úÖ –î–∏–Ω–æ–∑–∞–≤—Ä {name} ({latin_name}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!")
        return dinosaur